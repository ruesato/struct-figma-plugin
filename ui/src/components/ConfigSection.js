"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var jsx_runtime_1 = require("react/jsx-runtime");
var ConfigSection = function (_a) {
    var showConfigSave = _a.showConfigSave, setShowConfigSave = _a.setShowConfigSave, showConfigList = _a.showConfigList, setShowConfigList = _a.setShowConfigList, savedConfigs = _a.savedConfigs, configName = _a.configName, setConfigName = _a.setConfigName, saveConfiguration = _a.saveConfiguration, loadConfigurations = _a.loadConfigurations, clearAllConfigurations = _a.clearAllConfigurations, loadConfiguration = _a.loadConfiguration, deleteConfiguration = _a.deleteConfiguration;
    return ((0, jsx_runtime_1.jsxs)("section", { className: "config-section", children: [(0, jsx_runtime_1.jsx)("h3", { className: "text-lg font-semibold mb-2", children: "Configuration" }), (0, jsx_runtime_1.jsxs)("div", { className: "config-controls", children: [(0, jsx_runtime_1.jsx)("button", { className: "btn-primary text-xs", onClick: function () { return setShowConfigSave(true); }, children: "Save Config" }), (0, jsx_runtime_1.jsx)("button", { className: "btn-primary text-xs", onClick: function () {
                            loadConfigurations();
                            setShowConfigList(true);
                        }, children: "Load Config" }), savedConfigs.length > 0 && ((0, jsx_runtime_1.jsx)("button", { className: "btn-danger", onClick: clearAllConfigurations, children: "Clear All" }))] }), showConfigSave && ((0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("input", { type: "text", className: "form-input mb-2", placeholder: "Configuration name", value: configName, onChange: function (e) { return setConfigName(e.target.value); } }), (0, jsx_runtime_1.jsxs)("div", { className: "config-controls", children: [(0, jsx_runtime_1.jsx)("button", { className: "btn-primary text-xs", onClick: saveConfiguration, children: "Save" }), (0, jsx_runtime_1.jsx)("button", { className: "btn-secondary text-xs", onClick: function () { return setShowConfigSave(false); }, children: "Cancel" })] })] })), showConfigList && savedConfigs.length > 0 && ((0, jsx_runtime_1.jsx)("div", { className: "config-list", children: savedConfigs.map(function (config) { return ((0, jsx_runtime_1.jsxs)("div", { className: "config-item", children: [(0, jsx_runtime_1.jsx)("div", { className: "config-name", children: config.name }), (0, jsx_runtime_1.jsx)("div", { className: "config-meta", children: new Date(config.savedAt).toLocaleDateString() }), (0, jsx_runtime_1.jsxs)("div", { className: "config-actions", children: [(0, jsx_runtime_1.jsx)("button", { className: "config-action-btn", onClick: function () { return loadConfiguration(config); }, children: "Load" }), (0, jsx_runtime_1.jsx)("button", { className: "config-action-btn", onClick: function () { return deleteConfiguration(config.name); }, children: "Delete" })] })] }, config.name)); }) })), showConfigList && ((0, jsx_runtime_1.jsx)("button", { className: "btn-secondary text-xs", onClick: function () { return setShowConfigList(false); }, children: "Close" }))] }));
};
exports.default = ConfigSection;
