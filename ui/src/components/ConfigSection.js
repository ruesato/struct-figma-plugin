"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const ConfigSection = ({ showConfigSave, setShowConfigSave, showConfigList, setShowConfigList, savedConfigs, configName, setConfigName, saveConfiguration, loadConfigurations, clearAllConfigurations, loadConfiguration, deleteConfiguration }) => ((0, jsx_runtime_1.jsxs)("section", { className: "config-section", children: [(0, jsx_runtime_1.jsx)("h3", { className: "text-lg font-semibold mb-2", children: "Configuration" }), (0, jsx_runtime_1.jsxs)("div", { className: "config-controls", children: [(0, jsx_runtime_1.jsx)("button", { className: "btn-primary text-xs", onClick: () => setShowConfigSave(true), children: "Save Config" }), (0, jsx_runtime_1.jsx)("button", { className: "btn-primary text-xs", onClick: () => {
                        loadConfigurations();
                        setShowConfigList(true);
                    }, children: "Load Config" }), savedConfigs.length > 0 && ((0, jsx_runtime_1.jsx)("button", { className: "btn-danger", onClick: clearAllConfigurations, children: "Clear All" }))] }), showConfigSave && ((0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("input", { type: "text", className: "form-input mb-2", placeholder: "Configuration name", value: configName, onChange: (e) => setConfigName(e.target.value) }), (0, jsx_runtime_1.jsxs)("div", { className: "config-controls", children: [(0, jsx_runtime_1.jsx)("button", { className: "btn-primary text-xs", onClick: saveConfiguration, children: "Save" }), (0, jsx_runtime_1.jsx)("button", { className: "btn-secondary text-xs", onClick: () => setShowConfigSave(false), children: "Cancel" })] })] })), showConfigList && savedConfigs.length > 0 && ((0, jsx_runtime_1.jsx)("div", { className: "config-list", children: savedConfigs.map(config => ((0, jsx_runtime_1.jsxs)("div", { className: "config-item", children: [(0, jsx_runtime_1.jsx)("div", { className: "config-name", children: config.name }), (0, jsx_runtime_1.jsx)("div", { className: "config-meta", children: new Date(config.savedAt).toLocaleDateString() }), (0, jsx_runtime_1.jsxs)("div", { className: "config-actions", children: [(0, jsx_runtime_1.jsx)("button", { className: "config-action-btn", onClick: () => loadConfiguration(config), children: "Load" }), (0, jsx_runtime_1.jsx)("button", { className: "config-action-btn", onClick: () => deleteConfiguration(config.name), children: "Delete" })] })] }, config.name))) })), showConfigList && ((0, jsx_runtime_1.jsx)("button", { className: "btn-secondary text-xs", onClick: () => setShowConfigList(false), children: "Close" }))] }));
exports.default = ConfigSection;
