"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const card_1 = require("./ui/card");
const input_1 = require("./ui/input");
const button_1 = require("./ui/button");
const lucide_react_1 = require("lucide-react");
const KeyMapping = ({ mappings, updateMapping, valueBuilders, openValueBuilder, clearValueBuilder }) => ((0, jsx_runtime_1.jsx)(card_1.Card, { className: "mb-6", children: (0, jsx_runtime_1.jsxs)(card_1.CardContent, { className: "p-3 space-y-3", children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex items-center justify-between", children: [(0, jsx_runtime_1.jsx)("div", { className: "text-zinc-500 text-xs font-semibold uppercase tracking-wide", children: "Data mapping" }), (0, jsx_runtime_1.jsx)(lucide_react_1.ChevronDown, { className: "h-5 w-5 text-muted-foreground rotate-180" })] }), (0, jsx_runtime_1.jsxs)("div", { className: "space-y-0", children: [(0, jsx_runtime_1.jsxs)("div", { className: "grid grid-cols-[140px_1fr] gap-4 border-b-2 border-zinc-700 pb-1.5", children: [(0, jsx_runtime_1.jsx)("div", { className: "text-xs font-semibold text-white tracking-wide px-2", children: "Key" }), (0, jsx_runtime_1.jsx)("div", { className: "text-xs font-semibold text-white tracking-wide px-2", children: "Layer name" })] }), mappings.map(mapping => ((0, jsx_runtime_1.jsxs)("div", { className: "grid grid-cols-[140px_1fr] gap-4 py-3 border-b border-zinc-700 items-center", children: [(0, jsx_runtime_1.jsx)("div", { className: "text-xs text-white px-2 overflow-hidden text-ellipsis whitespace-nowrap", children: mapping.jsonKey }), (0, jsx_runtime_1.jsxs)("div", { className: "flex items-center gap-2 px-2", children: [(0, jsx_runtime_1.jsx)(input_1.Input, { value: mapping.layerName, onChange: (e) => updateMapping(mapping.jsonKey, e.target.value), placeholder: "adult", className: "h-8 text-xs bg-neutral-50 border-zinc-200 text-zinc-500" }), (0, jsx_runtime_1.jsxs)("div", { className: "flex gap-1 min-w-12", children: [(0, jsx_runtime_1.jsx)(button_1.Button, { variant: "ghost", size: "icon", className: "h-5 w-5 p-0 hover:bg-zinc-600", onClick: () => openValueBuilder(mapping.jsonKey), title: "Build custom value", children: (0, jsx_runtime_1.jsx)(lucide_react_1.Edit, { className: "h-3 w-3 text-muted-foreground" }) }), valueBuilders[mapping.jsonKey] && ((0, jsx_runtime_1.jsx)(button_1.Button, { variant: "ghost", size: "icon", className: "h-5 w-5 p-0 hover:bg-zinc-600", onClick: () => clearValueBuilder(mapping.jsonKey), title: "Clear value builder", children: (0, jsx_runtime_1.jsx)(lucide_react_1.Trash2, { className: "h-3 w-3 text-muted-foreground" }) }))] })] })] }, mapping.jsonKey)))] })] }) }));
exports.default = KeyMapping;
