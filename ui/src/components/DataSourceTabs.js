"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const DataSourceTabs = ({ dataSource, setDataSource, apiConfig, setApiConfig, isLoadingData, fetchApiData, processJsonData, dropZoneRef, handleFileInputChange }) => ((0, jsx_runtime_1.jsxs)("section", { className: "data-source-section", children: [(0, jsx_runtime_1.jsx)("h3", { className: "text-lg font-semibold mb-2", children: "Data Source" }), (0, jsx_runtime_1.jsxs)("div", { className: "data-source-tabs", children: [(0, jsx_runtime_1.jsx)("button", { className: `data-source-tab ${dataSource === 'file' ? 'active' : ''}`, onClick: () => setDataSource('file'), children: "File" }), (0, jsx_runtime_1.jsx)("button", { className: `data-source-tab ${dataSource === 'api' ? 'active' : ''}`, onClick: () => setDataSource('api'), children: "API" }), (0, jsx_runtime_1.jsx)("button", { className: `data-source-tab ${dataSource === 'manual' ? 'active' : ''}`, onClick: () => setDataSource('manual'), children: "Manual" })] }), (0, jsx_runtime_1.jsxs)("div", { className: "data-source-content", children: [dataSource === 'file' && ((0, jsx_runtime_1.jsx)("div", { className: "upload-section", children: (0, jsx_runtime_1.jsxs)("div", { className: "drop-zone", ref: dropZoneRef, children: [(0, jsx_runtime_1.jsx)("p", { children: "Drop JSON file here or" }), (0, jsx_runtime_1.jsxs)("label", { className: "file-button", children: ["Choose File", (0, jsx_runtime_1.jsx)("input", { type: "file", accept: ".json,application/json", onChange: handleFileInputChange, style: { display: 'none' } })] }), (0, jsx_runtime_1.jsx)("p", { className: "file-limit", children: "Max 2MB" })] }) })), dataSource === 'api' && ((0, jsx_runtime_1.jsxs)("div", { className: "mb-5", children: [(0, jsx_runtime_1.jsxs)("div", { className: "form-group", children: [(0, jsx_runtime_1.jsx)("label", { className: "form-label", children: "API URL" }), (0, jsx_runtime_1.jsx)("input", { type: "text", className: "form-input", value: apiConfig.url, onChange: (e) => setApiConfig(prev => ({ ...prev, url: e.target.value })), placeholder: "https://api.example.com/data" })] }), (0, jsx_runtime_1.jsxs)("div", { className: "form-row", children: [(0, jsx_runtime_1.jsxs)("div", { className: "form-group", children: [(0, jsx_runtime_1.jsx)("label", { className: "form-label", children: "Method" }), (0, jsx_runtime_1.jsxs)("select", { className: "form-select", value: apiConfig.method, onChange: (e) => setApiConfig(prev => ({ ...prev, method: e.target.value })), children: [(0, jsx_runtime_1.jsx)("option", { value: "GET", children: "GET" }), (0, jsx_runtime_1.jsx)("option", { value: "POST", children: "POST" })] })] }), (0, jsx_runtime_1.jsxs)("div", { className: "form-group", children: [(0, jsx_runtime_1.jsx)("label", { className: "form-label", children: "Auth Type" }), (0, jsx_runtime_1.jsxs)("select", { className: "form-select", value: apiConfig.authType, onChange: (e) => setApiConfig(prev => ({ ...prev, authType: e.target.value })), children: [(0, jsx_runtime_1.jsx)("option", { value: "none", children: "None" }), (0, jsx_runtime_1.jsx)("option", { value: "bearer", children: "Bearer Token" }), (0, jsx_runtime_1.jsx)("option", { value: "apikey", children: "API Key" })] })] })] }), (apiConfig.authType === 'bearer' || apiConfig.authType === 'apikey') && ((0, jsx_runtime_1.jsxs)("div", { className: "form-group", children: [(0, jsx_runtime_1.jsx)("label", { className: "form-label", children: apiConfig.authType === 'bearer' ? 'Bearer Token' : 'API Key' }), (0, jsx_runtime_1.jsx)("input", { type: "password", className: "form-input", value: apiConfig.apiKey, onChange: (e) => setApiConfig(prev => ({ ...prev, apiKey: e.target.value })), placeholder: "Enter your token/key" })] })), (0, jsx_runtime_1.jsx)("button", { className: "fetch-button", onClick: fetchApiData, disabled: isLoadingData || !apiConfig.url.trim(), children: isLoadingData ? 'Loading...' : 'Fetch Data' })] })), dataSource === 'manual' && ((0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("p", { children: "Paste your JSON data:" }), (0, jsx_runtime_1.jsx)("textarea", { rows: 8, className: "w-full mt-2 p-2 font-mono text-sm border border-gray-300 rounded", placeholder: "Paste JSON data here...", onChange: (e) => {
                                try {
                                    const parsed = JSON.parse(e.target.value);
                                    processJsonData(parsed, 'manual');
                                }
                                catch (error) {
                                    // Invalid JSON, ignore
                                }
                            } })] }))] })] }));
exports.default = DataSourceTabs;
