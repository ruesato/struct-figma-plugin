"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var jsx_runtime_1 = require("react/jsx-runtime");
var dialog_1 = require("./ui/dialog");
var button_1 = require("./ui/button");
var input_1 = require("./ui/input");
var select_1 = require("./ui/select");
var lucide_react_1 = require("lucide-react");
var ValueBuilderModal = function (_a) {
    var valueBuilderModal = _a.valueBuilderModal, currentBuilder = _a.currentBuilder, jsonKeys = _a.jsonKeys, jsonData = _a.jsonData, addBuilderPart = _a.addBuilderPart, updateBuilderPart = _a.updateBuilderPart, removeBuilderPart = _a.removeBuilderPart, moveBuilderPart = _a.moveBuilderPart, evaluateValueBuilder = _a.evaluateValueBuilder, closeValueBuilder = _a.closeValueBuilder, saveValueBuilder = _a.saveValueBuilder;
    return ((0, jsx_runtime_1.jsx)(dialog_1.Dialog, { open: valueBuilderModal.isOpen, onOpenChange: closeValueBuilder, children: (0, jsx_runtime_1.jsxs)(dialog_1.DialogContent, { className: "bg-[var(--figma-color-bg)] border-[var(--figma-color-border)] text-[var(--figma-color-text)] max-w-2xl p-0 shadow-lg", children: [(0, jsx_runtime_1.jsx)(dialog_1.DialogHeader, { className: "p-6 pb-4", children: (0, jsx_runtime_1.jsxs)("div", { className: "flex items-center justify-between", children: [(0, jsx_runtime_1.jsxs)(dialog_1.DialogTitle, { className: "text-sm font-normal text-[var(--figma-color-text-secondary)] uppercase tracking-wide", children: ["VALUE BUILDER: ", valueBuilderModal.mappingKey] }), (0, jsx_runtime_1.jsx)(button_1.Button, { size: "sm", variant: "outline", onClick: closeValueBuilder, className: "h-6 w-6 p-0 text-[var(--figma-color-text-secondary)] hover:text-[var(--figma-color-text)]", children: (0, jsx_runtime_1.jsx)(lucide_react_1.X, { className: "h-4 w-4" }) })] }) }), (0, jsx_runtime_1.jsxs)("div", { className: "px-6 pb-6 space-y-4", children: [jsonData && jsonData.length > 0 && ((0, jsx_runtime_1.jsxs)("div", { className: "space-y-2", children: [(0, jsx_runtime_1.jsx)("label", { className: "text-sm text-[var(--figma-color-text)]", children: "Preview" }), (0, jsx_runtime_1.jsx)("div", { className: "p-3 bg-[var(--figma-color-bg-secondary)] border border-[var(--figma-color-border)] rounded-md text-sm text-[var(--figma-color-text)]", children: evaluateValueBuilder(currentBuilder, jsonData[0]) })] })), (0, jsx_runtime_1.jsx)("div", { className: "space-y-2", children: currentBuilder.parts.map(function (part, index) { return ((0, jsx_runtime_1.jsxs)("div", { className: "flex items-center gap-3 p-3 bg-[var(--figma-color-bg-secondary)] border border-[var(--figma-color-border)] rounded-md", onDragOver: function (e) {
                                    e.preventDefault(); // allow drop
                                    if (e.dataTransfer)
                                        e.dataTransfer.dropEffect = 'move';
                                }, onDrop: function (e) {
                                    var _a;
                                    e.preventDefault();
                                    var from = Number((_a = e.dataTransfer) === null || _a === void 0 ? void 0 : _a.getData('text/plain'));
                                    var to = index;
                                    if (!Number.isNaN(from) && from !== to)
                                        moveBuilderPart(from, to);
                                }, children: [(0, jsx_runtime_1.jsx)(button_1.Button, { variant: "ghost", size: "sm", className: "h-8 w-8 p-0 text-[var(--figma-color-text-secondary)] hover:text-[var(--figma-color-text)] cursor-grab", draggable: true, onDragStart: function (e) {
                                            var _a;
                                            // store source index
                                            (_a = e.dataTransfer) === null || _a === void 0 ? void 0 : _a.setData('text/plain', String(index));
                                            // set allowed effect
                                            if (e.dataTransfer)
                                                e.dataTransfer.effectAllowed = 'move';
                                        }, children: (0, jsx_runtime_1.jsx)(lucide_react_1.Grip, { className: "h-4 w-4" }) }), (0, jsx_runtime_1.jsxs)(select_1.Select, { value: part.type, onValueChange: function (value) { return updateBuilderPart(index, 'type', value); }, children: [(0, jsx_runtime_1.jsx)(select_1.SelectTrigger, { className: "w-32 h-8 bg-[var(--figma-color-bg-secondary)] border-[var(--figma-color-border)] text-[var(--figma-color-text)]", children: (0, jsx_runtime_1.jsx)(select_1.SelectValue, {}) }), (0, jsx_runtime_1.jsxs)(select_1.SelectContent, { className: "bg-[var(--figma-color-bg-secondary)] border-[var(--figma-color-border)]", children: [(0, jsx_runtime_1.jsx)(select_1.SelectItem, { value: "key", children: "JSON Key" }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, { value: "text", children: "Text" }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, { value: "separator", children: "Separator" })] })] }), (0, jsx_runtime_1.jsx)("div", { className: "flex-1", children: part.type === 'key' ? ((0, jsx_runtime_1.jsxs)(select_1.Select, { value: part.value, onValueChange: function (value) { return updateBuilderPart(index, 'value', value); }, children: [(0, jsx_runtime_1.jsx)(select_1.SelectTrigger, { className: "h-8 bg-[var(--figma-color-bg-secondary)] border-[var(--figma-color-border)] text-[var(--figma-color-text)]", children: (0, jsx_runtime_1.jsx)(select_1.SelectValue, { placeholder: "Select key..." }) }), (0, jsx_runtime_1.jsx)(select_1.SelectContent, { className: "bg-[var(--figma-color-bg-secondary)] border-[var(--figma-color-border)]", children: jsonKeys.map(function (key) { return ((0, jsx_runtime_1.jsx)(select_1.SelectItem, { value: key, children: key }, key)); }) })] })) : ((0, jsx_runtime_1.jsx)(input_1.Input, { value: part.value, onChange: function (e) { return updateBuilderPart(index, 'value', e.target.value); }, placeholder: part.type === 'text' ? 'Enter text' : 'e.g., " - "', className: "h-8 bg-[var(--figma-color-bg-secondary)] border-[var(--figma-color-border)] text-[var(--figma-color-text)] placeholder:text-[var(--figma-color-text-tertiary)]" })) }), (0, jsx_runtime_1.jsx)(button_1.Button, { variant: "ghost", size: "sm", onClick: function () { return removeBuilderPart(index); }, className: "h-8 w-8 p-0 text-[var(--figma-color-text-secondary)] hover:text-[var(--figma-color-text)] hover:bg-[var(--figma-color-bg-danger)]", children: (0, jsx_runtime_1.jsx)(lucide_react_1.Trash2, { className: "h-4 w-4" }) })] }, index)); }) }), (0, jsx_runtime_1.jsxs)(button_1.Button, { variant: "ghost", onClick: function () { return addBuilderPart('key'); }, className: "w-full h-10 border border-dashed border-[var(--figma-color-border)] text-[var(--figma-color-text-secondary)] hover:text-[var(--figma-color-text)] hover:border-[var(--figma-color-border)] hover:bg-[var(--figma-color-bg-secondary)]", children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Plus, { className: "h-4 w-4 mr-2" }), "Add another value"] }), (0, jsx_runtime_1.jsxs)("div", { className: "flex gap-2 pt-4", children: [(0, jsx_runtime_1.jsx)(button_1.Button, { variant: "outline", onClick: closeValueBuilder, className: "flex-1 bg-transparent border-[var(--figma-color-border)] text-[var(--figma-color-text)] hover:bg-[var(--figma-color-bg-secondary)] hover:text-[var(--figma-color-text)]", children: "Cancel" }), (0, jsx_runtime_1.jsx)(button_1.Button, { onClick: saveValueBuilder, className: "flex-1 bg-[var(--figma-color-bg-brand)] hover:bg-[var(--figma-color-bg-brand-hover)] text-[var(--figma-color-text)]", children: "Save" })] })] })] }) }));
};
exports.default = ValueBuilderModal;
